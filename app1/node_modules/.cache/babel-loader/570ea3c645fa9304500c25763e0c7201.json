{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grindelwald\\\\Desktop\\\\app1\\\\src\\\\components\\\\ReactTimer.js\";\nimport React, { Component } from 'react';\nimport Time from '../lib/Time';\n\nclass ReactTimer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.InputHandler = event => {\n      const seconds = parseInt(event.target.value);\n\n      if (seconds && typeof seconds === 'number') {\n        this.setState({\n          time: seconds\n        });\n      } else {\n        this.setState(() => ({\n          time: 0\n        }));\n      }\n    };\n\n    this.startHandler = () => {\n      console.log(this.state.time);\n      if (this.state.status !== false) setInterval(() => {\n        if (this.state.time !== 0 && this.state.status) {\n          this.setState(prevState => ({\n            time: prevState.time - 10\n          }));\n        } else {\n          this.setState(() => ({\n            status: false,\n            time: 0\n          }));\n          clearInterval(this.interval);\n        }\n      }, 10);\n    };\n\n    this.resetHandler = () => {\n      this.setState({\n        time: 0,\n        status: false\n      });\n    };\n\n    this.state = {\n      time: 0,\n      status: false\n    };\n  }\n\n  render() {\n    const time = new Time();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.time,\n      onChange: this.InputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), time.getTime(this.state.time), React.createElement(\"button\", {\n      onClick: this.startHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"start\"), React.createElement(\"button\", {\n      onClick: this.resetHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}\n\nexport default ReactTimer;","map":{"version":3,"sources":["C:/Users/Grindelwald/Desktop/app1/src/components/ReactTimer.js"],"names":["React","Component","Time","ReactTimer","constructor","props","InputHandler","event","seconds","parseInt","target","value","setState","time","startHandler","console","log","state","status","setInterval","prevState","clearInterval","interval","resetHandler","render","getTime"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,YAPkB,GAOFC,KAAD,IACf;AAEI,YAAMC,OAAO,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAxB;;AACA,UAAIH,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAlC,EACA;AAAC,aAAKI,QAAL,CAAc;AACXC,UAAAA,IAAI,EAACL;AADM,SAAd;AAEE,OAHH,MAIK;AACD,aAAKI,QAAL,CAAc,OAAO;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAP,CAAd;AACH;AAEJ,KAnBiB;;AAAA,SAoBlBC,YApBkB,GAoBH,MACf;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,IAAvB;AACA,UAAG,KAAKI,KAAL,CAAWC,MAAX,KAAoB,KAAvB,EACAC,WAAW,CAAC,MAAM;AACd,YAAI,KAAKF,KAAL,CAAWJ,IAAX,KAAkB,CAAnB,IAAwB,KAAKI,KAAL,CAAWC,MAAtC,EACA;AACK,eAAKN,QAAL,CAAcQ,SAAS,KAAK;AAAEP,YAAAA,IAAI,EAAEO,SAAS,CAACP,IAAV,GAAiB;AAAzB,WAAL,CAAvB;AACJ,SAHD,MAKA;AACG,eAAKD,QAAL,CAAc,OAAO;AAAEM,YAAAA,MAAM,EAAE,KAAV;AAAiBL,YAAAA,IAAI,EAAE;AAAvB,WAAP,CAAd;AAEKQ,UAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACP;AACJ,OAXU,EAWT,EAXS,CAAX;AAYH,KApCiB;;AAAA,SAuClBC,YAvCkB,GAuCH,MACf;AACG,WAAKX,QAAL,CAAc;AACbC,QAAAA,IAAI,EAAC,CADQ;AAEbK,QAAAA,MAAM,EAAC;AAFM,OAAd;AAIF,KA7CiB;;AAEd,SAAKD,KAAL,GAAa;AACTJ,MAAAA,IAAI,EAAC,CADI;AAETK,MAAAA,MAAM,EAAC;AAFE,KAAb;AAIH;;AAyCDM,EAAAA,MAAM,GAAE;AACL,UAAMX,IAAI,GAAG,IAAIX,IAAJ,EAAb;AACH,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,IAAI,EAAG,MAAd;AAAqB,MAAA,KAAK,EAAI,KAAKe,KAAL,CAAWJ,IAAzC;AAA+C,MAAA,QAAQ,EAAI,KAAKP,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAECO,IAAI,CAACY,OAAL,CAAa,KAAKR,KAAL,CAAWJ,IAAxB,CAFD,EAGA;AAAQ,MAAA,OAAO,EAAI,KAAKC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,EAIA;AAAQ,MAAA,OAAO,EAAI,KAAKS,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJA,CADJ;AAQH;;AA1DkC;;AA6DnC,eAAepB,UAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport Time from '../lib/Time'\r\nclass ReactTimer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            time:0,\r\n            status:false\r\n        }\r\n    }\r\n    InputHandler = (event) =>\r\n    {\r\n\r\n        const seconds = parseInt(event.target.value);\r\n        if (seconds && typeof seconds === 'number')\r\n        {this.setState({\r\n            time:seconds\r\n        })}\r\n        else {\r\n            this.setState(() => ({ time: 0 }));\r\n        }\r\n\r\n    }\r\n    startHandler = () =>\r\n    {\r\n        console.log(this.state.time)\r\n        if(this.state.status!==false)\r\n        setInterval(() => {\r\n            if((this.state.time!==0)&&(this.state.status))\r\n            {\r\n                 this.setState(prevState => ({ time: prevState.time - 10 }));\r\n            }\r\n            else\r\n            {\r\n               this.setState(() => ({ status: false, time: 0 }));\r\n\r\n                    clearInterval(this.interval);\r\n            }\r\n        },10)\r\n    }\r\n    \r\n\r\n    resetHandler = () =>\r\n    {\r\n       this.setState({\r\n        time:0,\r\n        status:false\r\n       })\r\n    }\r\n    \r\n    render(){\r\n       const time = new Time();\r\n    return (\r\n        <div>\r\n        <input type = \"text\" value = {this.state.time} onChange = {this.InputHandler} />\r\n        {time.getTime(this.state.time)}\r\n        <button onClick = {this.startHandler}>start</button>\r\n        <button onClick = {this.resetHandler}>Reset</button>\r\n        </div>\r\n        )\r\n}\r\n}\r\n\r\nexport default ReactTimer\r\n"]},"metadata":{},"sourceType":"module"}