{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grindelwald\\\\Desktop\\\\app1\\\\src\\\\components\\\\ReactTimer.js\";\nimport React, { Component } from 'react';\nimport Time from '../lib/Time';\n\nclass ReactTimer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.InputHandler = event => {\n      console.log(this.state.time);\n\n      if (this.state.time !== 0) {\n        this.setState({\n          time: event.target.value * 1000\n        });\n      }\n    };\n\n    this.startHandler = () => {\n      if (this.state.status !== 'start') {\n        setInterval(() => {\n          if (this.state.time !== 0) {\n            this.setState(prevState => ({\n              time: prevState.time - 10\n            }));\n          } else {\n            this.setState({\n              time: 0\n            });\n            clearInterval(this.interval);\n          }\n        }, 10);\n        this.setState({\n          status: 'start'\n        });\n      }\n    };\n\n    this.resetHandler = () => {\n      clearInterval(this.interval);\n      this.setState({\n        time: 0\n      });\n    };\n\n    this.state = {\n      time: 0,\n      status: false\n    };\n  }\n\n  render() {\n    const time = new Time();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"display-time align-self-center\",\n      style: {\n        position: 'absolute',\n        top: 100\n      },\n      maxLength: \"6\",\n      value: this.state.time,\n      onChange: this.InputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), time.getTime(this.state.time), React.createElement(\"button\", {\n      onClick: this.startHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"start\"), React.createElement(\"button\", {\n      onClick: this.resetHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}\n\nexport default ReactTimer;","map":{"version":3,"sources":["C:/Users/Grindelwald/Desktop/app1/src/components/ReactTimer.js"],"names":["React","Component","Time","ReactTimer","constructor","props","InputHandler","event","console","log","state","time","setState","target","value","startHandler","status","setInterval","prevState","clearInterval","interval","resetHandler","render","position","top","getTime"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,YAPkB,GAOFC,KAAD,IACf;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,IAAvB;;AACA,UAAG,KAAKD,KAAL,CAAWC,IAAX,KAAkB,CAArB,EACA;AAAI,aAAKC,QAAL,CAAc;AACVD,UAAAA,IAAI,EAAEJ,KAAK,CAACM,MAAN,CAAaC,KAAd,GAAqB;AADhB,SAAd;AAGH;AAEJ,KAhBiB;;AAAA,SAiBlBC,YAjBkB,GAiBH,MACf;AACM,UAAG,KAAKL,KAAL,CAAWM,MAAX,KAAoB,OAAvB,EACA;AACEC,QAAAA,WAAW,CAAC,MACZ;AACI,cAAG,KAAKP,KAAL,CAAWC,IAAX,KAAkB,CAArB,EACA;AACI,iBAAKC,QAAL,CAAeM,SAAD,KAAgB;AAACP,cAAAA,IAAI,EAACO,SAAS,CAACP,IAAV,GAAgB;AAAtB,aAAhB,CAAd;AACH,WAHD,MAKA;AACI,iBAAKC,QAAL,CAAc;AACVD,cAAAA,IAAI,EAAC;AADK,aAAd;AAGAQ,YAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACH;AACJ,SAbU,EAaT,EAbS,CAAX;AAcA,aAAKR,QAAL,CAAc;AACVI,UAAAA,MAAM,EAAC;AADG,SAAd;AAGD;AACN,KAvCiB;;AAAA,SAwClBK,YAxCkB,GAwCH,MACf;AACIF,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA,WAAKR,QAAL,CAAc;AACVD,QAAAA,IAAI,EAAC;AADK,OAAd;AAIH,KA/CiB;;AAEd,SAAKD,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,CADI;AAETK,MAAAA,MAAM,EAAC;AAFE,KAAb;AAIH;;AA2CDM,EAAAA,MAAM,GAAE;AACL,UAAMX,IAAI,GAAG,IAAIT,IAAJ,EAAb;AACH,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAC,gCAAjB;AAAkD,MAAA,KAAK,EAAE;AAAEqB,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,GAAG,EAAE;AAA7B,OAAzD;AACe,MAAA,SAAS,EAAC,GADzB;AAC6B,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,IAD/C;AAEe,MAAA,QAAQ,EAAE,KAAKL,YAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAICK,IAAI,CAACc,OAAL,CAAa,KAAKf,KAAL,CAAWC,IAAxB,CAJD,EAKA;AAAQ,MAAA,OAAO,EAAI,KAAKI,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALA,EAMA;AAAQ,MAAA,OAAO,EAAI,KAAKM,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANA,CADJ;AAUH;;AA9DkC;;AAiEnC,eAAelB,UAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport Time from '../lib/Time'\r\nclass ReactTimer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            time:0,\r\n            status:false\r\n        }\r\n    }\r\n    InputHandler = (event) =>\r\n    {\r\n        console.log(this.state.time)\r\n        if(this.state.time!==0)\r\n        {   this.setState({\r\n                time:(event.target.value)*1000\r\n            })\r\n        }\r\n        \r\n    }\r\n    startHandler = () =>\r\n    {\r\n          if(this.state.status!=='start')\r\n          {\r\n            setInterval(() => \r\n            {\r\n                if(this.state.time!==0)\r\n                {\r\n                    this.setState((prevState) => ({time:prevState.time -10}))\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        time:0\r\n                    })\r\n                    clearInterval(this.interval);\r\n                }\r\n            },10)\r\n            this.setState({\r\n                status:'start'\r\n            });\r\n          }\r\n    }\r\n    resetHandler = () =>\r\n    {\r\n        clearInterval(this.interval);\r\n        this.setState({\r\n            time:0\r\n        })\r\n      \r\n    }\r\n    \r\n    render(){\r\n       const time = new Time();\r\n    return (\r\n        <div>\r\n         <input className=\"display-time align-self-center\" style={{ position: 'absolute', top: 100 }}\r\n                        maxLength=\"6\" value={this.state.time}\r\n                        onChange={this.InputHandler} />\r\n        {time.getTime(this.state.time)}\r\n        <button onClick = {this.startHandler}>start</button>\r\n        <button onClick = {this.resetHandler}>Reset</button>\r\n        </div>\r\n        )\r\n}\r\n}\r\n\r\nexport default ReactTimer\r\n"]},"metadata":{},"sourceType":"module"}